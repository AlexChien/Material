
    <div id="ext_list">
    <script type="text/javascript" charset="utf-8">
        var grid;
        var ds;
        $(function(){
            init_grid();
            init_listener();
        });

        function init_grid() {
            var editor = new Ext.ux.grid.RowEditor({
                saveText: '调整',
                cancelText: "取消"
            });

            var writer = new Ext.data.JsonWriter({
                encode: false
            });

            ds = new Ext.data.GroupingStore({
                proxy: new Ext.data.HttpProxy({
                    api: {
                            read: '/order_line_item_adjusteds/load_data?order_id=<%=@order.id%>',
                            update: {url: '/order_line_item_adjusteds/ext_update', method: 'put'}
                         }
                }),
                reader: new Ext.data.JsonReader({
                        root: 'Olias',
                        totalProperty: 'size',
                        messageProperty: "message"
                    },
                    [
                        {name: 'id', mapping: 'id'},
                        {name: 'material_id', mapping: 'material_id'},
                        {name: 'sku', mapping: 'sku'},
                        {name: 'name', mapping: 'name'},
                        {name: 'region', mapping: 'region'},
                        {name: 'unit_price', mapping: 'unit_price'},
                        {name: 'quantity_collected', mapping: 'quantity_collected'},
                        {name: 'quantity_adjust', mapping: 'quantity_adjust'},
                        {name: 'quantity_total', mapping: 'quantity_total'},
                        {name: 'subtotal', mapping: 'subtotal'}
                    ]),
                // restful: true,
                writer: writer
            });
            var cm = new Ext.grid.ColumnModel([
                {id: 'sku', header: "sku", dataIndex: 'sku',sortable:true,width:100},
                {id: 'name', header: "物料名称", dataIndex: 'name',sortable:true,width:186},
                {id: 'region', header: "所属区", dataIndex: 'region',sortable:true,width:100},
                {id: 'unit_price', header: "物料价格", dataIndex: 'unit_price',sortable:true,width:100},
                {id: 'quantity_collected', header: "预定数量", dataIndex: 'quantity_collected',sortable:true,width:100},
                {id: 'quantity_adjust', header: "调整数量", dataIndex: 'quantity_adjust',sortable:true,width:100,editor: new Ext.form.TextField({})},
                {id: 'quantity_total', header: "预定总数", dataIndex: 'quantity_total',sortable:true,width:100},
                {id: 'subtotal', header: "小计", dataIndex: 'subtotal',sortable:true,width:100,summaryType: 'sum'}
            ]);

        var filters = new Ext.ux.grid.GridFilters({
            local: true,   // defaults to false (remote filtering)
            filters: [
            {
                type: 'string',
                dataIndex: 'sku'
            }, {
                type: 'string',
                dataIndex: 'name'
            }, {
                type: 'string',
                dataIndex: 'region'
            }, {
                type: 'numeric',
                dataIndex: 'unit_price'
            }, {
                type: 'numeric',
                dataIndex: 'quantity_collected'
            }, {
                type: 'numeric',
                dataIndex: 'quantity_adjust'
            }, {
                type: 'numeric',
                dataIndex: 'quantity_total'
            },{
                type: 'numeric',
                dataIndex: 'subtotal'
                }
            ]
        });

        // utilize custom extension for Hybrid Summary
        var summary = new Ext.ux.grid.HybridSummary();

        grid = new Ext.grid.GridPanel({
            loadMask: true,
            // autoHeight: true,
            height: 300,
            autoWidth: true,
            ds: ds,
            cm: cm,
            sm: new Ext.grid.RowSelectionModel({ singleSelect: true }),
            plugins: [filters,summary],
            view: new Ext.grid.GroupingView({
                forceFit:true,
                groupTextTpl: '{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Items" : "Item"]})'
            }),
            title: '<center>订单详细（<%=@order.order_status.name%>）<%if @order.order_status_id ==5%><a href="/orders/<%=@order.id%>/print"><img src="/images/icons/printer.png" /></a><%end%></center>'
        });

        grid.render('ext_list');
        ds.load();//{params:{start:0}}

        grid.on("rowcontextmenu",function(grid,rowIndex,e){
            if(rowIndex<0){return;}
            e.preventDefault();
            grid.getSelectionModel().selectRow(rowIndex);
            var treeMenu = new Ext.menu.Menu([
                {
                    xtype:"",
                    text:"显示详情",
                    icon:"/images/icons/database.png",
                    pressed:true,
                    handler:function(){
                        var selections = grid.getSelectionModel().getSelections();
                        for (var i = 0; i < selections.length; i++) {
    parent.addwindow("/materials/"+selections[i].get('material_id')+"/iframe_show","物料详情",400,300);
                        }
                    }
                }
            ]);
            treeMenu.showAt(e.getPoint());
        });
        }

        function init_listener(){
            var App = new Ext.App({});
            Ext.data.DataProxy.addListener('beforewrite', function(proxy, action) {
                App.setAlert(App.STATUS_NOTICE, "操作中...");
            });

            Ext.data.DataProxy.addListener('write', function(proxy, action, result, res, rs) {
                $("#olia_total").html(res.message.olia_total);
                App.setAlert(true, res.message.notice);
            });

            Ext.data.DataProxy.addListener('exception', function(proxy, type, action, options, res) {
                // App.setAlert(false, "Something bad happend while executing " + action);
                Ext.Msg.show({
                    title: '发生错误',
                    msg: res.message,
                    icon: Ext.MessageBox.ERROR
                });
            });
        }
    </script>
    </div>

    <div style="padding:10px 50px 0px 0px;float:right" id="olia_total">
        <%if @order.order_status_id ==3%>
            <%order_amount=@order.order_line_item_adjusteds.first(:select=>"sum(subtotal) as subtotal").subtotal.to_f%>
            预定总计：￥<%=order_amount%><br/>
            可使用预算：￥<%=current_user.region.redeemable_budget%><br/>
            将剩余预算：￥<%=current_user.region.redeemable_budget - order_amount%><br/>
        <%else%>
            总计：￥<%=@order.amount%>
        <%end%>

    </div>
    <div class="clear"></div>

    <% form_for @order do |f| -%>
        <%if @order.order_status_id ==3%>
        <br/>
        <div class="tab_btn">
            <input type="button" onclick="accept_fail(<%=@order.id%>);" class="button_btn" value="预定拒绝"></input>
            <%= f.submit "预定接受",:class=>"button_btn",:confirm=>"预定接受后将不能修改订单！您确认此次提交吗？" %>
        </div>
        <br/>
        <%end%>
    <%end%>

    <div class="tab" id="accept_fail_message">

    </div>

    <%javascript_tag do%>
        function accept_fail(order_id){
            $("#accept_fail_message").load("/orders/"+order_id+"/accept_fail_message");
        }
    <%end%>